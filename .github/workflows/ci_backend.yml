name: 'CI - Backend'

env:
  IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/backend
on:
  workflow_dispatch:
  push:
    branches:
      - 'feature/backend/*'
      - 'fix/backend/*'
  pull_request:
    branches:
      - 'feature/backend/*'
      - 'fix/backend/*'

jobs:
  build:
    name: 'Backend: Build'
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.11'
    defaults:
      run:
        working-directory: backend
    runs-on: ${{ matrix.os }}

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v3
      - name: 'Set up Python ${{ matrix.python-version }}'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: 'Install dependencies'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  tests:
    name: 'Backend: Test and Code Quality'
    needs: build
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.11'
    defaults:
      run:
        working-directory: backend
    runs-on: ${{ matrix.os }}

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v3
      - name: 'Set up Python ${{ matrix.python-version }}'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: 'Install dependencies'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: 'Run code quality checks'
        run: |
          pip install "black" "isort"
      - name: 'Lint with Black'
        uses: psf/black@stable
        with:
          options: '--exclude=tests/'
          src: backend/src/
      - name: 'Lint with isort'
        run: |
          isort --check-only --profile black .

  docker-build:
    name: 'Backend: Docker build'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v3
      - name: 'Login to GitHub Container Registry'
        run: echo {CICD_GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.CICD_GITHUB_TOKEN }}
      - name: 'Pull Image'
        run: docker pull ${{ env.IMAGE }}:latest || true
      - name: 'Build Image'
        run: docker build \
          --cache-from ${{ env.IMAGE }}:latest\
          --tag ${{ env.IMAGE }}:latest . \
          --file ./backend/Dockerfile.production \
          "./backend"
      - name: 'Push Image'
        run: |
          docker push ${{ env.IMAGE }}:latest
